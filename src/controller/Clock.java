package controller;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Color;
import java.time.LocalTime;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Gia Nguyen
 */
public class Clock extends javax.swing.JPanel implements java.beans.Customizer {
    
    private Object bean;

    /**
     * Creates new customizer Lock
     */
    public Clock() {
        initComponents();
        
        Thread countTime= new Thread(new  Runnable() {
            @Override
            public void run() {
                Random r=new Random();
                while (true) {                    
                    LocalTime lt;
                    lt=LocalTime.now();
                    Color c= new Color(r.nextInt(200), r.nextInt(200), r.nextInt(200));
                    c.darker();
                    lblHour.setText(convertTime(lt.getHour()));
                    lblMin.setText(":"+convertTime(lt.getMinute())+":");
                    lblSec.setText(convertTime(lt.getSecond()));
                    lblMin.setForeground(c);
                    lblHour.setForeground(lblMin.getForeground().darker());
                    lblSec.setForeground(lblHour.getForeground().darker());
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Clock.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
        countTime.start();
    }
    
    public void setObject(Object bean) {
        this.bean = bean;
    }
    public String convertTime(int x)
    {
        if(x<10)
            return "0"+String.valueOf(x);
        return String.valueOf(x);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblHour = new javax.swing.JLabel();
        lblMin = new javax.swing.JLabel();
        lblSec = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setBackground(new Color(255, 255, 255)
        );
        setFont(new java.awt.Font("Stencil", 1, 18)); // NOI18N
        setLayout(new java.awt.BorderLayout());

        lblHour.setBackground(new java.awt.Color(255, 255, 255));
        lblHour.setFont(new java.awt.Font("Stencil", 1, 48)); // NOI18N
        lblHour.setForeground(new java.awt.Color(0, 0, 255));
        lblHour.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHour.setText("HH");
        add(lblHour, java.awt.BorderLayout.LINE_START);

        lblMin.setFont(new java.awt.Font("Stencil", 1, 48)); // NOI18N
        lblMin.setForeground(new java.awt.Color(255, 0, 255));
        lblMin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMin.setText(":MM:");
        add(lblMin, java.awt.BorderLayout.CENTER);

        lblSec.setFont(new java.awt.Font("Stencil", 1, 48)); // NOI18N
        lblSec.setForeground(new java.awt.Color(255, 0, 0));
        lblSec.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSec.setText("SS");
        lblSec.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        add(lblSec, java.awt.BorderLayout.LINE_END);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblHour;
    private javax.swing.JLabel lblMin;
    private javax.swing.JLabel lblSec;
    // End of variables declaration//GEN-END:variables
}
